plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
}

group = 'com.dro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion='1.5.5.Final'
    mapstructBindingVersion='0.2.0'
    wiremockContractVersion='4.0.3'

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok"

    testAnnotationProcessor  "org.projectlombok:lombok"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.0.3'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'io.projectreactor:reactor-test'

}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', 'admin'
        property 'sonar.password', 'sonar'
        property 'sonar.exclusions', '**/*.yml, **/*Exception.java, **/*Application.java'
        property 'sonar.sources', 'src/main'
        property 'sonar.tests', 'src/test'
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.language', 'java'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

project.tasks["sonarqube"].dependsOn "test"
